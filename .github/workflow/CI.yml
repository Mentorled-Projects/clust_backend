name: clust_api_test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: clust_db
          POSTGRES_USER: clust
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_SERVER: postgres
      POSTGRES_DB: clust_db
      POSTGRES_USER: clust
      POSTGRES_PASSWORD: password
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h postgres -p 5432; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Wait for Redis to be ready
        run: |
          until redis-cli -h redis ping | grep PONG; do
            echo "Waiting for Redis..."
            sleep 2
          done

      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Start Celery worker (background)
        run: |
          celery -A your_app.celery_worker worker --loglevel=info &
        shell: bash

      - name: Run tests
        run: pytest
